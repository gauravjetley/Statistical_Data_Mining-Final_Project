{
hhdatatrain$ARP[row] <- sum(train$regular_price[train$`SKU#`==j & train$HH_id==i])/
length(train$regular_price[train$`SKU#`==j & train$HH_id==i])
}
if (is.na(sum(train$regular_price[train$`SKU#`==j & train$HH_id==i])/
length(train$regular_price[train$`SKU#`==j & train$HH_id==i]))==T) {
hhdatatrain$ARP[row] <- 0
}
row<-row+1
}}
row<-1
for (i in hh) {
for (j in sku) {
if (is.na(sum(train$price_cut[train$`SKU#`==j & train$HH_id==i])/
length(train$price_cut[train$`SKU#`==j & train$HH_id==i]))==F)
{
hhdatatrain$APC[row] <- sum(train$price_cut[train$`SKU#`==j & train$HH_id==i])/
length(train$price_cut[train$`SKU#`==j & train$HH_id==i])
}
if (is.na(sum(train$price_cut[train$`SKU#`==j & train$HH_id==i])/
length(train$price_cut[train$`SKU#`==j & train$HH_id==i]))==T) {
hhdatatrain$APC[row] <- 0
}
row<-row+1
}}
hhdatatrainv1 <- hhdatatrain
row <- 1
for (i in hh) {
for (j in sku) {
hhdatatrainv1$brand[hhdatatrainv1$`SKU#`==j] <- as.character(train$brand[train$`SKU#`==j & !duplicated(train$`SKU#`)])
hhdatatrainv1$form[hhdatatrainv1$`SKU#`==j] <- as.character(train$form[train$`SKU#`==j & !duplicated(train$`SKU#`)])
hhdatatrainv1$formula[hhdatatrainv1$`SKU#`==j] <- as.character(train$formula2[train$`SKU#`==j & !duplicated(train$`SKU#`)])
hhdatatrainv1$size[hhdatatrainv1$`SKU#`==j] <- as.character(train$size[train$`SKU#`==j & !duplicated(train$`SKU#`)])
hhdatatrainv1$display[hhdatatrainv1$`SKU#`==j] <- as.character(train$display[train$`SKU#`==j & !duplicated(train$`SKU#`)])
hhdatatrainv1$feature[hhdatatrainv1$`SKU#`==j] <- as.character(train$feature[train$`SKU#`==j & !duplicated(train$`SKU#`)])
row=row+1
}
}
as.character(train$brand[train$`SKU#`==j & !duplicated(train$`SKU#`)])
View(train)
as.character(train$brand[train$`SKU#`==j & duplicated(train$`SKU#`)])
as.factor(train$brand[train$`SKU#`==j & !duplicated(train$`SKU#`)])
sku
train$brand[train$`SKU#`==j & !duplicated(train$`SKU#`)]
as.character(train$brand[train$`SKU#`==j])
train$brand[train$`SKU#`==j]
as.character(train$brand[as.numeric(train$`SKU#`)==j])
train$brand
train$brand[train$`SKU#`==16]
train$brand[train$`SKU#`==j]
as.character(train$brand[as.numeric(train$`SKU#`)==as.numeric(j)])
j
sort(unique(train$`SKU#`))
sku <- sort(unique(train$`SKU#`))
hh <- as.integer(sort(unique(train3$HH_id)))
hhdatatrain <- data.frame(HH_id=1:35046,`SKU#`=1:35046)
row <- 1
for (i in hh) {
for (j in sku) {
hhdatatrain$HH_id[row] <- i
hhdatatrain$`SKU#`[row] <- j
row <- row+1
}
}
## Adding more variables
# Sales variable (number of sold in paticular week)
row <- 1
for (i in hh) {
for (j in sku) {
if (length(table(train[train$HH_id==i & train$`SKU#`==j,"SKU#"]))==0) {
hhdatatrain$sales[row]<-0
}
if (length(table(train[train$HH_id==i & train$`SKU#`==j,"SKU#"]))!=0) {
hhdatatrain$sales[row]<-table(train[train$HH_id==i & train$`SKU#`==j,"SKU#"])
}
row=row+1
}
}
##Check for consistency
nrow(train)
sum(hhdatatrain$sales) #4417
# Creating lag variable for Sales
row <- 1
for (i in hh-1) {
for (j in sku) {
if (length(table(train[train$HH_id==i & train$`SKU#`==j,"SKU#"]))==0) {
hhdatatrain$lagsales[row]<-0
}
if (length(table(train[train$HH_id==i & train$`SKU#`==j,"SKU#"]))!=0) {
hhdatatrain$lagsales[row]<-table(train[train$HH_id==i & train$`SKU#`==j,"SKU#"])
}
row=row+1
}
}
# Creating variable for Avg. Price
row<-1
for (i in hh) {
for (i in sku) {
hhdatatrain$ARSP[row] <- train$ARSP[train$`SKU#`==i][1]
row<-row+1
}}
# Creating variable for Avg. Price Paid (average of price paid in that week; if NA then ARSP)
row<-1
for (i in hh) {
for (j in sku) {
if (is.na(sum(train$price_paid[train$`SKU#`==j & train$HH_id==i])/
length(train$price_paid[train$`SKU#`==j & train$HH_id==i]))==F)
{
hhdatatrain$APP[row] <- sum(train$price_paid[train$`SKU#`==j & train$HH_id==i])/
length(train$price_paid[train$`SKU#`==j & train$HH_id==i])
}
if (is.na(sum(train$price_paid[train$`SKU#`==j & train$HH_id==i])/
length(train$price_paid[train$`SKU#`==j & train$HH_id==i]))==T) {
hhdatatrain$APP[row] <- 0
}
row<-row+1
}}
# Creating variable for Avg. Regular Price (average of price paid in that week; if NA then ARSP)
row<-1
for (i in hh) {
for (j in sku) {
if (is.na(sum(train$regular_price[train$`SKU#`==j & train$HH_id==i])/
length(train$regular_price[train$`SKU#`==j & train$HH_id==i]))==F)
{
hhdatatrain$ARP[row] <- sum(train$regular_price[train$`SKU#`==j & train$HH_id==i])/
length(train$regular_price[train$`SKU#`==j & train$HH_id==i])
}
if (is.na(sum(train$regular_price[train$`SKU#`==j & train$HH_id==i])/
length(train$regular_price[train$`SKU#`==j & train$HH_id==i]))==T) {
hhdatatrain$ARP[row] <- 0
}
row<-row+1
}}
# Creating variable for Avg. Price Cut (average of price paid in that week; if NA then ARSP)
row<-1
for (i in hh) {
for (j in sku) {
if (is.na(sum(train$price_cut[train$`SKU#`==j & train$HH_id==i])/
length(train$price_cut[train$`SKU#`==j & train$HH_id==i]))==F)
{
hhdatatrain$APC[row] <- sum(train$price_cut[train$`SKU#`==j & train$HH_id==i])/
length(train$price_cut[train$`SKU#`==j & train$HH_id==i])
}
if (is.na(sum(train$price_cut[train$`SKU#`==j & train$HH_id==i])/
length(train$price_cut[train$`SKU#`==j & train$HH_id==i]))==T) {
hhdatatrain$APC[row] <- 0
}
row<-row+1
}}
hhdatatrainv1 <- hhdatatrain
# Adding brand, form, formula, size, display, feature
row <- 1
for (i in hh) {
for (j in sku) {
hhdatatrainv1$brand[hhdatatrainv1$`SKU#`==j] <- as.character(train$brand[train$`SKU#`==j & !duplicated(train$`SKU#`)])
hhdatatrainv1$form[hhdatatrainv1$`SKU#`==j] <- as.character(train$form[train$`SKU#`==j & !duplicated(train$`SKU#`)])
hhdatatrainv1$formula[hhdatatrainv1$`SKU#`==j] <- as.character(train$formula2[train$`SKU#`==j & !duplicated(train$`SKU#`)])
hhdatatrainv1$size[hhdatatrainv1$`SKU#`==j] <- as.character(train$size[train$`SKU#`==j & !duplicated(train$`SKU#`)])
hhdatatrainv1$display[hhdatatrainv1$`SKU#`==j] <- as.character(train$display[train$`SKU#`==j & !duplicated(train$`SKU#`)])
hhdatatrainv1$feature[hhdatatrainv1$`SKU#`==j] <- as.character(train$feature[train$`SKU#`==j & !duplicated(train$`SKU#`)])
row=row+1
}
}
j
View(hhdatatrainv1)
hhdatatest <- data.frame(HH_id=1:35046,`SKU#`=1:35046)
row <- 1
for (i in hh) {
for (j in sku) {
hhdatatest$HH_id[row] <- i
hhdatatest$`SKU#`[row] <- j
row <- row+1
}
}
## Adding more variables
# Sales variable (number of sold in paticular week)
row <- 1
for (i in hh) {
for (j in sku) {
if (length(table(test[test$HH_id==i & test$`SKU#`==j,"SKU#"]))==0) {
hhdatatest$sales[row]<-0
}
if (length(table(test[test$HH_id==i & test$`SKU#`==j,"SKU#"]))!=0) {
hhdatatest$sales[row]<-table(test[test$HH_id==i & test$`SKU#`==j,"SKU#"])
}
row=row+1
}
}
##Check for consistency
nrow(test)
sum(hhdatatest$sales) #4417
# Creating lag variable for Sales
row <- 1
for (i in hh-1) {
for (j in sku) {
if (length(table(test[test$HH_id==i & test$`SKU#`==j,"SKU#"]))==0) {
hhdatatest$lagsales[row]<-0
}
if (length(table(test[test$HH_id==i & test$`SKU#`==j,"SKU#"]))!=0) {
hhdatatest$lagsales[row]<-table(test[test$HH_id==i & test$`SKU#`==j,"SKU#"])
}
row=row+1
}
}
# Creating variable for Avg. Price
row<-1
for (i in hh) {
for (i in sku) {
hhdatatest$ARSP[row] <- test$ARSP[test$`SKU#`==i][1]
row<-row+1
}}
# Creating variable for Avg. Price Paid (average of price paid in that week; if NA then ARSP)
row<-1
for (i in hh) {
for (j in sku) {
if (is.na(sum(test$price_paid[test$`SKU#`==j & test$HH_id==i])/
length(test$price_paid[test$`SKU#`==j & test$HH_id==i]))==F)
{
hhdatatest$APP[row] <- sum(test$price_paid[test$`SKU#`==j & test$HH_id==i])/
length(test$price_paid[test$`SKU#`==j & test$HH_id==i])
}
if (is.na(sum(test$price_paid[test$`SKU#`==j & test$HH_id==i])/
length(test$price_paid[test$`SKU#`==j & test$HH_id==i]))==T) {
hhdatatest$APP[row] <- 0
}
row<-row+1
}}
# Creating variable for Avg. Regular Price (average of price paid in that week; if NA then ARSP)
row<-1
for (i in hh) {
for (j in sku) {
if (is.na(sum(test$regular_price[test$`SKU#`==j & test$HH_id==i])/
length(test$regular_price[test$`SKU#`==j & test$HH_id==i]))==F)
{
hhdatatest$ARP[row] <- sum(test$regular_price[test$`SKU#`==j & test$HH_id==i])/
length(test$regular_price[test$`SKU#`==j & test$HH_id==i])
}
if (is.na(sum(test$regular_price[test$`SKU#`==j & test$HH_id==i])/
length(test$regular_price[test$`SKU#`==j & test$HH_id==i]))==T) {
hhdatatest$ARP[row] <- 0
}
row<-row+1
}}
# Creating variable for Avg. Price Cut (average of price paid in that week; if NA then ARSP)
row<-1
for (i in hh) {
for (j in sku) {
if (is.na(sum(test$price_cut[test$`SKU#`==j & test$HH_id==i])/
length(test$price_cut[test$`SKU#`==j & test$HH_id==i]))==F)
{
hhdatatest$APC[row] <- sum(test$price_cut[test$`SKU#`==j & test$HH_id==i])/
length(test$price_cut[test$`SKU#`==j & test$HH_id==i])
}
if (is.na(sum(test$price_cut[test$`SKU#`==j & test$HH_id==i])/
length(test$price_cut[test$`SKU#`==j & test$HH_id==i]))==T) {
hhdatatest$APC[row] <- 0
}
row<-row+1
}}
hhdatatestv1 <- hhdatatest
# Adding brand, form, formula, size, display, feature
row <- 1
for (i in hh) {
for (j in sku) {
hhdatatestv1$brand[hhdatatestv1$`SKU#`==j] <- as.character(test$brand[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$form[hhdatatestv1$`SKU#`==j] <- as.character(test$form[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$formula[hhdatatestv1$`SKU#`==j] <- as.character(test$formula2[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$size[hhdatatestv1$`SKU#`==j] <- as.character(test$size[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$display[hhdatatestv1$`SKU#`==j] <- as.character(test$display[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$feature[hhdatatestv1$`SKU#`==j] <- as.character(test$feature[test$`SKU#`==j & !duplicated(test$`SKU#`)])
row=row+1
}
}
j
sku <- sort(unique(train$`SKU#`))
hh <- as.integer(sort(unique(train3$HH_id)))
hh <- as.integer(sort(unique(train3$HH_id)))
hh <- as.integer(sort(unique(train$HH_id)))
row <- 1
for (i in hh) {
for (j in sku) {
hhdatatestv1$brand[hhdatatestv1$`SKU#`==j] <- as.character(test$brand[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$form[hhdatatestv1$`SKU#`==j] <- as.character(test$form[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$formula[hhdatatestv1$`SKU#`==j] <- as.character(test$formula2[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$size[hhdatatestv1$`SKU#`==j] <- as.character(test$size[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$display[hhdatatestv1$`SKU#`==j] <- as.character(test$display[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$feature[hhdatatestv1$`SKU#`==j] <- as.character(test$feature[test$`SKU#`==j & !duplicated(test$`SKU#`)])
row=row+1
}
}
sku <- sort(unique(train$`SKU#`))
hh <- as.integer(sort(unique(train$HH_id)))
row <- 1
for (i in hh) {
for (j in sku) {
hhdatatestv1$brand[hhdatatestv1$`SKU#`==j] <- as.character(test$brand[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$form[hhdatatestv1$`SKU#`==j] <- as.character(test$form[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$formula[hhdatatestv1$`SKU#`==j] <- as.character(test$formula2[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$size[hhdatatestv1$`SKU#`==j] <- as.character(test$size[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$display[hhdatatestv1$`SKU#`==j] <- as.character(test$display[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$feature[hhdatatestv1$`SKU#`==j] <- as.character(test$feature[test$`SKU#`==j & !duplicated(test$`SKU#`)])
row=row+1
}
}
as.character(test$brand[test$`SKU#`==j & !duplicated(test$`SKU#`)])
j
sku <- sort(unique(finaldatav3$`SKU#`))
hh <- as.integer(sort(unique(finaldatav3$HH_id)))
row <- 1
for (i in hh) {
for (j in sku) {
hhdatatestv1$brand[hhdatatestv1$`SKU#`==j] <- as.character(test$brand[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$form[hhdatatestv1$`SKU#`==j] <- as.character(test$form[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$formula[hhdatatestv1$`SKU#`==j] <- as.character(test$formula2[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$size[hhdatatestv1$`SKU#`==j] <- as.character(test$size[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$display[hhdatatestv1$`SKU#`==j] <- as.character(test$display[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$feature[hhdatatestv1$`SKU#`==j] <- as.character(test$feature[test$`SKU#`==j & !duplicated(test$`SKU#`)])
row=row+1
}
}
View(test)
sku <- sort(unique(test$`SKU#`))
row <- 1
for (i in hh) {
for (j in sku) {
hhdatatestv1$brand[hhdatatestv1$`SKU#`==j] <- as.character(test$brand[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$form[hhdatatestv1$`SKU#`==j] <- as.character(test$form[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$formula[hhdatatestv1$`SKU#`==j] <- as.character(test$formula2[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$size[hhdatatestv1$`SKU#`==j] <- as.character(test$size[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$display[hhdatatestv1$`SKU#`==j] <- as.character(test$display[test$`SKU#`==j & !duplicated(test$`SKU#`)])
hhdatatestv1$feature[hhdatatestv1$`SKU#`==j] <- as.character(test$feature[test$`SKU#`==j & !duplicated(test$`SKU#`)])
row=row+1
}
}
View(hhdatatestv1)
hhdatatestv2 <- hhdatatestv1[hhdatatestv1$`SKU#`!=16,]
View(hhdatatestv2)
hhdatatrainv2 <- hhdatatrainv1
library("rpart")
hh.tree1 <- rpart( as.numeric(sales) ~ as.factor(month) + as.factor(season) + as.factor(brand) +
as.factor(form) + as.factor(formula) + as.factor(size) +
as.factor(display)  + as.factor(feature) + as.numeric(APP) +
as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(HH_id) +
as.numeric(lagsales)+ as.factor(SKU.), data = hhdatatrainv2)
summary(hh.tree1$splits)
# Variable importance
# as.numeric(APC)      as.factor(SKU.)      as.numeric(ARP)      as.factor(form)      as.numeric(APP)
# 22                   19                   14                   10                    8
# as.numeric(lagsales)      as.factor(size)     as.factor(brand)     as.numeric(ARSP)     as.factor(month)
# 8                    6                    5                    3                    2
# In sample predictive check
hhdatatrainv2[,17] <- predict(hh.tree1,hhdatatrainv2)
in.hhtree1 <- data.frame(Actual=hhdatatrainv2[,3],Predictedin=hhdatatrainv2[,17])
library(hydroGOF)
rmse(in.hhtree1$Predictedin,in.hhtree1$Actual)
# In sample predictive check
hhlytest[,17] <- predict(hh.tree1,hhlytest)
out.hhtree1 <- data.frame(Actual=hhlytest[,3],Predictedout=hhlytest[,17])
rmse(out.hhtree1$Predictedout,out.hhtree1$Actual)
library("rpart")
hh.tree1 <- rpart( as.numeric(sales) ~  as.factor(brand) +
as.factor(form) + as.factor(formula) + as.factor(size) +
as.factor(display)  + as.factor(feature) + as.numeric(APP) +
as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(HH_id) +
as.numeric(lagsales)+ as.factor(SKU.), data = hhdatatrainv2)
summary(hh.tree1$splits)
summary(hh.tree1)
printcp(hh.tree1)
hhdatatrainv2[,17] <- predict(hh.tree1,hhdatatrainv2)
in.hhtree1 <- data.frame(Actual=hhdatatrainv2[,3],Predictedin=hhdatatrainv2[,17])
library(hydroGOF)
rmse(in.hhtree1$Predictedin,in.hhtree1$Actual)
# In sample predictive check
hhlytest[,17] <- predict(hh.tree1,hhlytest)
out.hhtree1 <- data.frame(Actual=hhlytest[,3],Predictedout=hhlytest[,17])
rmse(out.hhtree1$Predictedout,out.hhtree1$Actual)
View(hhdatatrainv2)
View(hhdatatestv2)
hhdatatrainv2[,16] <- predict(hh.tree1,hhdatatrainv2)
in.hhtree1 <- data.frame(Actual=hhdatatrainv2[,4],Predictedin=hhdatatrainv2[,16])
library(hydroGOF)
rmse(in.hhtree1$Predictedin,in.hhtree1$Actual)
# In sample predictive check
hhlytest[,16] <- predict(hh.tree1,hhlytest)
out.hhtree1 <- data.frame(Actual=hhlytest[,4],Predictedout=hhlytest[,16])
rmse(out.hhtree1$Predictedout,out.hhtree1$Actual)
hhdatatestv2[,16] <- predict(hh.tree1,hhdatatestv2)
out.hhtree1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])
rmse(out.hhtree1$Predictedout,out.hhtree1$Actual)
hhdatatestv2[,16] <- predict(hh.tree1,hhdatatestv2)
week.lm1 <- lm(as.numeric(sales) ~ as.factor(month) + as.factor(season) + as.factor(brand) +
as.factor(form) + as.factor(formula) + as.factor(size) + as.factor(feature) + as.numeric(APP) +
as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(IRIweek) +
as.numeric(lagsales)+ as.factor(SKU.) , data = weeklytrain)
hh.tree1 <- rpart( as.numeric(sales) ~  as.factor(brand) +
as.factor(form) + as.factor(formula) + as.factor(size) +
as.factor(feature) + as.numeric(APP) +
as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(HH_id) +
as.numeric(lagsales)+ as.factor(SKU.), data = hhdatatrainv2)
summary(hh.tree1)
printcp(hh.tree1)
hhdatatrainv2[,16] <- predict(hh.tree1,hhdatatrainv2)
in.hhtree1 <- data.frame(Actual=hhdatatrainv2[,4],Predictedin=hhdatatrainv2[,16])
rmse(in.hhtree1$Predictedin,in.hhtree1$Actual)
# In sample predictive check
hhdatatestv2[,16] <- predict(hh.tree1,hhdatatestv2)
out.hhtree1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])
rmse(out.hhtree1$Predictedout,out.hhtree1$Actual)
week.lm1 <- lm(as.numeric(sales) ~  as.factor(brand) +
as.factor(form) + as.factor(formula) + as.factor(size) +
as.factor(feature) + as.numeric(APP) +
as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(HH_id) +
as.numeric(lagsales)+ as.factor(SKU.), data = hhdatatrainv2)
hh.tree1 <- rpart( as.numeric(sales) ~  as.factor(brand) +
as.factor(form) + as.factor(formula) + as.factor(size) +
as.factor(feature) + as.numeric(APP) +
as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(HH_id) +
as.numeric(lagsales)+ as.factor(`SKU#`), data = hhdatatrainv2)
summary(hh.tree1)
printcp(hh.tree1)
hhdatatrainv2[,16] <- predict(hh.tree1,hhdatatrainv2)
in.hhtree1 <- data.frame(Actual=hhdatatrainv2[,4],Predictedin=hhdatatrainv2[,16])
rmse(in.hhtree1$Predictedin,in.hhtree1$Actual)
hhdatatestv2[,16] <- predict(hh.tree1,hhdatatestv2)
out.hhtree1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])
rmse(out.hhtree1$Predictedout,out.hhtree1$Actual)
week.lm1 <- lm(as.numeric(sales) ~  as.factor(brand) +
as.factor(form) + as.factor(formula) + as.factor(size) +
as.factor(feature) + as.numeric(APP) +
as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(HH_id) +
as.numeric(lagsales)+ as.factor(`SKU#`), data = hhdatatrainv2)
summary(week.lm1)
hh.lm1 <- lm(as.numeric(sales) ~  as.factor(brand) +
as.factor(form) + as.factor(formula) + as.factor(size) +
as.factor(feature) + as.numeric(APP) +
as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(HH_id) +
as.numeric(lagsales)+ as.factor(`SKU#`), data = hhdatatrainv2)
hhdatatestv2[,16] <- predict(hh.tree1,hhdatatestv2)
out.hhtree1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])
rmse(out.hhtree1$Predictedout,out.hhtree1$Actual)
AIC(hh.lm1)
BIC(hh.lm1)
hhdatatrainv2[,16] <- predict(hh.lm1,hhdatatrainv2)
in.hhlm1 <- data.frame(Actual=hhdatatrainv2[,4],Predictedin=hhdatatrainv2[,16])
rmse(in.hhlm1$Predictedin,in.hhlm1$Actual)
# Out of sample predictive check
hhdatatestv2[,16] <- predict(hh.lm1,hhdatatestv2)
out.hhlm1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])
rmse(out.hhlm1$Predictedout,out.hhlm1$Actual)
library(randomForest)
hh.rtree1 <- randomForest(as.numeric(sales) ~ +brand+
form + formula +size+
feature + APP +
ARP +ARSP +APC + HH_id +
lagsales+ `SKU#` , data = hhdatatrainv2)
hh.rtree1 <- randomForest(as.numeric(sales) ~ +brand+
form + formula +size+
feature + APP +
ARP +ARSP +APC + HH_id +
lagsales+`SKU#`, data = hhdatatrainv2)
hh.rtree1 <- ranomForest(as.numeric(sales) ~ +brand+form + formula +size+feature + APP + ARP +ARSP +APC + HH_id +lagsales+`SKU#`, data = hhdatatrainv2)
hh.rtree1 <- randmForest(as.numeric(sales) ~ +brand+form + formula +size+feature + APP + ARP +ARSP +APC + HH_id +lagsales+`SKU#`, data = hhdatatrainv2)
hh.rtree1 <- randomForest(as.numeric(sales) ~ +brand+form + formula +size+feature + APP + ARP +ARSP +APC + HH_id +lagsales+`SKU#`, data = hhdatatrainv2)
hh.rtree1 <- randomForest(as.numeric(sales) ~ +brand+form + formula +size+feature + APP + ARP +ARSP +APC + HH_id +lagsales+as.factor(`SKU#`), data = hhdatatrainv2)
hh.rtree1 <- randomForest(as.numeric(sales) ~ +brand+form + formula +size+feature + APP + ARP +ARSP +APC + HH_id +lagsales, data = hhdatatrainv2)
hh.rtree1 <- randomForest(sales~brand+form + formula +size+feature + APP + ARP +ARSP +APC + HH_id +lagsales+`SKU#`, data = hhdatatrainv2)
hh.rtree1 <- randomForest(sales~brand+form + formula +size+feature + APP + ARP +ARSP +APC + HH_id +lagsales, data = hhdatatrainv2)
library(e1071)
hh.svr1 <- svm(as.numeric(sales) ~ month+season+brand+
form + formula +size+
feature + APP +
ARP +ARSP +APC + HH_id +
lagsales+ `SKU#`, data = hhdatatrainv2)
hh.svr1 <- svm(as.numeric(sales) ~ brand+
form + formula +size+
feature + APP +
ARP +ARSP +APC + HH_id +
lagsales+ `SKU#`, data = hhdatatrainv2)
summary(hh.svr1)
hhdatatrainv2[,16] <- predict(hh.svr1,hhdatatrainv2)
in.hhsvr1 <- data.frame(Actual=hhdatatrainv2[,4],Predictedin=hhdatatrainv2[,16])
rmse(in.hhsvr1$Predictedin,in.hhsvr1$Actual)
hhdatatestv2[,16] <- predict(hh.svr1,hhdatatestv2)
out.hhsvr1 <- data.frame(Actual=hhdatatestv2[,3],Predictedout=hhdatatestv2[,17])
rmse(out.hhsvr1$Predictedout,out.hhsvr1$Actual)
hhdatatestv2[,16] <- predict(hh.svr1,hhdatatestv2)
out.hhsvr1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])
rmse(out.hhsvr1$Predictedout,out.hhsvr1$Actual)
hh.rtree1 <- randomForest(sales~brand+form + formula +size+feature + APP + ARP +ARSP +APC + HH_id +lagsales, data = hhdatatrainv2)
hhdatatestv2[,16] <- predict(hh.svr1,hhdatatestv2)
out.hhsvr1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])
rmse(out.hhsvr1$Predictedout,out.hhsvr1$Actual)
library(e1071)
library(hydroGOF)
hhdatatestv2[,16] <- predict(hh.svr1,hhdatatestv2)
out.hhsvr1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])
rmse(out.hhsvr1$Predictedout,out.hhsvr1$Actual)
hhdatatestv2[,16] <- predict(hh.lm1,hhdatatestv2)
out.hhlm1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])
rmse(out.hhlm1$Predictedout,out.hhlm1$Actual)
View(hhdatatestv2)
View(hhdatatrainv2)
week.rtree1
summary(week.rtree1)
varImp(week.rtree1)
importance(week.rtree1)
library(randomForest)
importance(week.rtree1)
importance(week.rtree1,type = 1)
week.rtree1$importanceSD
week.rtree1$importance
sort(week.rtree1$importance)
