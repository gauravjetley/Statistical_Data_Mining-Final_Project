{
    "contents" : "#########################\n## Loading all data files\n\nd1pur <- read.table(\"D1PUR.dat\")\ncolnames(d1pur) <- c(\"HH_id\",\"trip_info\")\n\nmerch <- read.table(\"MERCH.dat\")\ncolnames(merch) <- c(\"SKU#\",  \"store#\",  \"IRIweek\",  \"price_paid\",  \"merchandising\")\n\narsp <- read.table(\"ARSP.dat\")\ncolnames(arsp) <- c(\"SKU#\",  \"store#\", \"ARSP\")\n\nbrsinfo <- read.table(\"BRSINFO.dat\")\ncolnames(brsinfo) <- c(\"SKU#\",  \"description_of_SKU\",  \"brand\",  \"form\",  \"formula1\", \"formula2\",\n                    \"size\",  \"brand#\",  \"form#\",  \"formula2#\",  \"size#\")\n\niridates <- read.table(\"IRIdates.csv\", skip = 540, sep=\",\")\niridates <- iridates[,1:2]\ncolnames(iridates) <- c(\"week#\", \"ending_date\")\n\n################################\n## Cleaning Individual Dataframes\n\nView(d1pur)\n# variable Trip_Info is in  format AAABBBCCC \n# AAA = IRI week\n# BBB = store#\n# CCC = SKU# purchased\nd1pur[,3]<- substr(d1pur[,2],0,3)\nd1pur[,4]<- substr(d1pur[,2],4,6)\nd1pur[,5]<- substr(d1pur[,2],7,9)\ncolnames(d1pur) <- c(\"HH_id\", \"trip_info\", \"IRIweek\", \"store#\", \"SKU#\")\n\nView(merch)\n# Converting SKU# to 3 digit format\nmerch[,1] <- sprintf(\"%03d\",merch[,1])\n# Converting store# to 3 digit format\nmerch[,2] <- sprintf(\"%03d\",merch[,2])\n# Converting all merchandising obs to 6 digit format\nmerch[,5] <- sprintf(\"%06d\",merch[,5])\n# The format of the merchandising variable is AAABCD where\n# AAA = depromoted price\n# B   = ignore\n# C   = display\n# D   = feature\nmerch[,6] <- substr(merch[,5],0,3)\nmerch[,7] <- substr(merch[,5],4,4)\nmerch[,8] <- substr(merch[,5],5,5)\nmerch[,9] <- substr(merch[,5],6,6)\ncolnames(merch) <- c(\"SKU#\",  \"store#\",  \"IRIweek\",  \"price_paid\",  \"merchandising\", \n                     \"regular_price\", \"ignore\", \"display\", \"feature\")\n# Creating dummies for feature and display\nmerch[,10] <- ifelse(as.numeric(merch[,8])>=1,1,0)\nmerch[,11] <- ifelse(as.numeric(merch[,9])>=1,1,0)\ncolnames(merch) <- c(\"SKU#\",  \"store#\",  \"IRIweek\",  \"price_paid\",  \"merchandising\" \n                     ,\"regular_price\", \"ignore\", \"display\", \"feature\", \"d_disp\", \"d_feat\")\n# Converting regular_price into \"0.00\" format\nmerch[,6] <- paste(substr(merch[,6],0,1),substr(merch[,6],2,3),sep = \".\")\nmerch[,6] <- as.numeric(merch[,6])\n# Creating new variable price_cut\n# price_cut = regular_price - price_paid (if the result is < 0, price_cut = 0)\nmerch[,12] <- merch[,6] - merch[,4] \nmerch[,12] <- ifelse(merch[,12]<0,0,merch[,12])\ncolnames(merch) <- c(\"SKU#\",  \"store#\",  \"IRIweek\",  \"price_paid\",  \"merchandising\" \n                     ,\"regular_price\", \"ignore\", \"display\", \"feature\", \"d_disp\", \"d_feat\", \"price_cut\")\n\nView(arsp)\n# Converting SKU# to 3 digit format\narsp[,1] <- sprintf(\"%03d\",arsp[,1])\n# Converting store# to 3 digit format\narsp[,2] <- sprintf(\"%03d\",arsp[,2])\n\nView(brsinfo)\n# Getting rid of Formula1 col\nbrsinfo <- brsinfo[,c(1,2,3,4,6,7,8,9,10,11)]\nbrsinfo <- brsinfo[,c(1,3,4,5,6)]\n# Creating Dummy Variables\nbrsinfo <- cbind2(brsinfo, model.matrix(~brand -1,brsinfo))\nbrsinfo <- cbind2(brsinfo, model.matrix(~form -1,brsinfo))\nbrsinfo <- cbind2(brsinfo, model.matrix(~formula2 -1,brsinfo))\nbrsinfo <- cbind2(brsinfo, model.matrix(~size -1,brsinfo))\n\n\n######################\n# Making Final Dataset\n\n# Combining brsinfo and arsp\narsp_brs <- cbind2(arsp,brsinfo)\narsp_brs_1 <- arsp_brs[,-1]\n## *** USED Dr. Zantedeschi's function in this part. \n## It's a much better and easier way of merging than what I had in mind**** \nd1pur[,3] <- as.numeric(d1pur[,3])\nd1pur[,4] <- as.numeric(d1pur[,4])\nd1pur[,5] <- as.numeric(d1pur[,5])\nd1pur1 <- d1pur[,c(5,4,3,1,2)]\nmerch[,1] <- as.numeric(merch[,1])\nmerch[,2] <- 70\nmerch[,3] <- as.numeric(merch[,3])\nmerch_d1 <- merge(d1pur1, merch, by=c(\"IRIweek\", \"store#\",\"SKU#\"))\n# Combining all data into final dataset \nfinaldata <- merge(arsp_brs_1,merch_d1,by=c(\"SKU#\"))\n# Removing Redundent variables\nfinaldatav1 <- finaldata[,c(-2,-31,-33,-35,-37)]\nwrite.csv(finaldatav1,\"finaldatav1.csv\",row.names = F)\n#Importing date/season/month file created in excel from IRIdates.csv\nIRIdates_months_seasons <- read.csv(\"IRIdates_months_seasons.csv\")\nfinaldatav2 <- merge(finaldatav1,IRIdates_months_seasons,by=(\"IRIweek\"))\nfinaldatav3 <- finaldatav2\nwrite.csv(finaldatav3,\"finaldatav3.csv\",row.names = F)\n\n\n########################################\n## Making Datasets for Predictive Models\n\n\n#######################\n## Weekly Model Dataset\nsku <- sort(unique(finaldatav3$`SKU#`))\niriweek <- as.integer(sort(unique(finaldatav3$IRIweek)))\nweeklydata <- data.frame(IRIweek=1:4602,`SKU#`=1:4602)\nrow <- 1\nfor (i in iriweek) {\n  for (j in sku) {\n    weeklydata$IRIweek[row] <- i\n    weeklydata$`SKU#`[row] <- j\n    row <- row+1\n  }\n}\n\n## Adding more variables\n# Sales variable (number of sold in paticular week)\nrow <- 1\nfor (i in iriweek) {\n  for (j in sku) {\n    if (length(table(finaldatav3[finaldatav3$IRIweek==i & finaldatav3$`SKU#`==j,\"SKU#\"]))==0) {\n      weeklydata$sales[row]<-0\n    }\n    \n    if (length(table(finaldatav3[finaldatav3$IRIweek==i & finaldatav3$`SKU#`==j,\"SKU#\"]))!=0) {\n      weeklydata$sales[row]<-table(finaldatav3[finaldatav3$IRIweek==i & finaldatav3$`SKU#`==j,\"SKU#\"])\n    }\n    row=row+1\n    }\n}\n    #check for consistency\nsum(weeklydata$sales) #should be equal to 6554\n\n# Creating lag variable for Sales\nrow <- 1\nfor (i in iriweek-1) {\n  for (j in sku) {\n    if (length(table(finaldatav3[finaldatav3$IRIweek==i & finaldatav3$`SKU#`==j,\"SKU#\"]))==0) {\n      weeklydata$lagsales[row]<-0\n    }\n    \n    if (length(table(finaldatav3[finaldatav3$IRIweek==i & finaldatav3$`SKU#`==j,\"SKU#\"]))!=0) {\n      weeklydata$lagsales[row]<-table(finaldatav3[finaldatav3$IRIweek==i & finaldatav3$`SKU#`==j,\"SKU#\"])\n    }\n    row=row+1\n  }\n}\nsum(weeklydata$lagsales)\n\n# Creating variable for Avg. Price\nrow<-1\nfor (i in iriweek) {\nfor (i in sku) {\n  weeklydata$ARSP[row] <- finaldatav3$ARSP[finaldatav3$`SKU#`==i][1]\n  row<-row+1\n  }}\n\n# Creating variable for Avg. Price Paid (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in iriweek) {\n  for (j in sku) {\n    \n    if (is.na(sum(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])/\n         length(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i]))==F) \n      {\n      weeklydata$APP[row] <- sum(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])/\n      length(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])\n      \n    }\n    if (is.na(sum(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])/\n         length(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i]))==T) {\n      weeklydata$APP[row] <- 0\n    }\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Regular Price (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in iriweek) {\n  for (j in sku) {\n    \n    if (is.na(sum(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])/\n              length(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i]))==F) \n    {\n      weeklydata$ARP[row] <- sum(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])/\n        length(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])\n      \n    }\n    if (is.na(sum(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])/\n              length(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i]))==T) {\n      weeklydata$ARP[row] <- 0\n    }\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Price Cut (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in iriweek) {\n  for (j in sku) {\n    \n    if (is.na(sum(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])/\n              length(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i]))==F) \n    {\n      weeklydata$APC[row] <- sum(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])/\n        length(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])\n      \n    }\n    if (is.na(sum(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i])/\n              length(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$IRIweek==i]))==T) {\n      weeklydata$APC[row] <- 0\n    }\n    row<-row+1\n  }}\n\n\nweeklydatav1 <- weeklydata\n\n# Adding brand, form, formula, size, display, feature\nrow <- 1\nfor (i in iriweek) {\n  for (j in sku) {\n    weeklydatav1$brand[weeklydatav1$`SKU#`==j] <- as.character(finaldatav3$brand[finaldatav3$`SKU#`==j])\n    weeklydatav1$form[weeklydatav1$`SKU#`==j] <- as.character(finaldatav3$form[finaldatav3$`SKU#`==j])\n    weeklydatav1$formula[weeklydatav1$`SKU#`==j] <- as.character(finaldatav3$formula2[finaldatav3$`SKU#`==j])\n    weeklydatav1$size[weeklydatav1$`SKU#`==j] <- as.character(finaldatav3$size[finaldatav3$`SKU#`==j])\n    weeklydatav1$display[weeklydatav1$`SKU#`==j] <- as.character(finaldatav3$display[finaldatav3$`SKU#`==j])\n    weeklydatav1$feature[weeklydatav1$`SKU#`==j] <- as.character(finaldatav3$feature[finaldatav3$`SKU#`==j])\n    row=row+1\n  }\n}\n\n# Creating Seasonal and Monthly variables\nwrite.csv(weeklydatav1,\"weeklydatav1.csv\",row.names = F)\n# Manuplated the date time variables in excel and saved as weeklydatav1\nweeklydatav2 <- read.csv(\"weeklydatav2.csv\")\n# lm1 <- lm(sales ~ IRIweek+as.factor(`SKU#`)+lagsales+ARSP+APP+ARP+APC+as.factor(season)+as.factor(month),data=weeklydatav2)\n# summary(lm1)\n# plot(lm1)\n\n## Making Train and Test datasets\nweeklytrain <- weeklydatav2[1:3068,]\nweeklytest  <- weeklydatav2[3069:4602,]\n\n# lm1 <- lm(sales ~ IRIweek+as.factor(SKU.)+lagsales+ARSP+APP+ARP+APC+as.factor(brand)+as.factor(form)+\n#             as.factor(formula)+as.factor(size)+as.factor(display)+as.factor(feature)+as.factor(month)+\n#             as.factor(season),data=weeklytrain)\n# summary(lm1)\n# plot(lm1)\n# weeklytest[,17] <- predict(lm1,weeklytest[])\n# predictions <- weeklytest[,c(3,17)]\n# predictions[,3] <- predictions[,2] - predictions[,1]\n# mean(predictions[,3]^2) #MSE\n\n\n\n\n###########################\n## Household Model Dataset\n## Using Test and Train datasets which were created form finaldatav3 to create 2 datasets for houhehold\n## It will be impossible to seperate the data according to year after the data ghas been created\n\n## Train Set\n## Train Set\nsku <- sort(unique(train$`SKU#`))\nhh <- as.integer(sort(unique(train$HH_id)))\nhhdatatrain <- data.frame(HH_id=1:35046,`SKU#`=1:35046)\nrow <- 1\nfor (i in hh) {\n  for (j in sku) {\n    hhdatatrain$HH_id[row] <- i\n    hhdatatrain$`SKU#`[row] <- j\n    row <- row+1\n  }\n}\n\n## Adding more variables\n# Sales variable (number of sold in paticular week)\nrow <- 1\nfor (i in hh) {\n  for (j in sku) {\n    if (length(table(train[train$HH_id==i & train$`SKU#`==j,\"SKU#\"]))==0) {\n      hhdatatrain$sales[row]<-0\n    }\n    if (length(table(train[train$HH_id==i & train$`SKU#`==j,\"SKU#\"]))!=0) {\n      hhdatatrain$sales[row]<-table(train[train$HH_id==i & train$`SKU#`==j,\"SKU#\"])\n    }\n    row=row+1\n  }\n}\n\n##Check for consistency\nnrow(train)\nsum(hhdatatrain$sales) #4417\n\n# Creating lag variable for Sales\nrow <- 1\nfor (i in hh-1) {\n  for (j in sku) {\n    if (length(table(train[train$HH_id==i & train$`SKU#`==j,\"SKU#\"]))==0) {\n      hhdatatrain$lagsales[row]<-0\n    }\n    \n    if (length(table(train[train$HH_id==i & train$`SKU#`==j,\"SKU#\"]))!=0) {\n      hhdatatrain$lagsales[row]<-table(train[train$HH_id==i & train$`SKU#`==j,\"SKU#\"])\n    }\n    row=row+1\n  }\n}\n\n# Creating variable for Avg. Price\nrow<-1\nfor (i in hh) {\n  for (i in sku) {\n    hhdatatrain$ARSP[row] <- train$ARSP[train$`SKU#`==i][1]\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Price Paid (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in hh) {\n  for (j in sku) {\n    \n    if (is.na(sum(train$price_paid[train$`SKU#`==j & train$HH_id==i])/\n              length(train$price_paid[train$`SKU#`==j & train$HH_id==i]))==F) \n    {\n      hhdatatrain$APP[row] <- sum(train$price_paid[train$`SKU#`==j & train$HH_id==i])/\n        length(train$price_paid[train$`SKU#`==j & train$HH_id==i])\n      \n    }\n    if (is.na(sum(train$price_paid[train$`SKU#`==j & train$HH_id==i])/\n              length(train$price_paid[train$`SKU#`==j & train$HH_id==i]))==T) {\n      hhdatatrain$APP[row] <- 0\n    }\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Regular Price (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in hh) {\n  for (j in sku) {\n    \n    if (is.na(sum(train$regular_price[train$`SKU#`==j & train$HH_id==i])/\n              length(train$regular_price[train$`SKU#`==j & train$HH_id==i]))==F) \n    {\n      hhdatatrain$ARP[row] <- sum(train$regular_price[train$`SKU#`==j & train$HH_id==i])/\n        length(train$regular_price[train$`SKU#`==j & train$HH_id==i])\n      \n    }\n    if (is.na(sum(train$regular_price[train$`SKU#`==j & train$HH_id==i])/\n              length(train$regular_price[train$`SKU#`==j & train$HH_id==i]))==T) {\n      hhdatatrain$ARP[row] <- 0\n    }\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Price Cut (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in hh) {\n  for (j in sku) {\n    \n    if (is.na(sum(train$price_cut[train$`SKU#`==j & train$HH_id==i])/\n              length(train$price_cut[train$`SKU#`==j & train$HH_id==i]))==F) \n    {\n      hhdatatrain$APC[row] <- sum(train$price_cut[train$`SKU#`==j & train$HH_id==i])/\n        length(train$price_cut[train$`SKU#`==j & train$HH_id==i])\n      \n    }\n    if (is.na(sum(train$price_cut[train$`SKU#`==j & train$HH_id==i])/\n              length(train$price_cut[train$`SKU#`==j & train$HH_id==i]))==T) {\n      hhdatatrain$APC[row] <- 0\n    }\n    row<-row+1\n  }}\n\nhhdatatrainv1 <- hhdatatrain\n\n# Adding brand, form, formula, size, display, feature\nrow <- 1\nfor (i in hh) {\n  for (j in sku) {\n    hhdatatrainv1$brand[hhdatatrainv1$`SKU#`==j] <- as.character(train$brand[train$`SKU#`==j & !duplicated(train$`SKU#`)])\n    hhdatatrainv1$form[hhdatatrainv1$`SKU#`==j] <- as.character(train$form[train$`SKU#`==j & !duplicated(train$`SKU#`)])\n    hhdatatrainv1$formula[hhdatatrainv1$`SKU#`==j] <- as.character(train$formula2[train$`SKU#`==j & !duplicated(train$`SKU#`)])\n    hhdatatrainv1$size[hhdatatrainv1$`SKU#`==j] <- as.character(train$size[train$`SKU#`==j & !duplicated(train$`SKU#`)])\n    hhdatatrainv1$display[hhdatatrainv1$`SKU#`==j] <- as.character(train$display[train$`SKU#`==j & !duplicated(train$`SKU#`)])\n    hhdatatrainv1$feature[hhdatatrainv1$`SKU#`==j] <- as.character(train$feature[train$`SKU#`==j & !duplicated(train$`SKU#`)])\n    row=row+1\n  }\n}\n\nhhdatatrainv2 <- hhdatatrainv1\n\n\n\n\n\n\n## Testing Dataset\nsku <- sort(unique(test$`SKU#`))\nhh <- as.integer(sort(unique(test$HH_id)))\nhhdatatest <- data.frame(HH_id=1:35046,`SKU#`=1:35046)\nrow <- 1\nfor (i in hh) {\n  for (j in sku) {\n    hhdatatest$HH_id[row] <- i\n    hhdatatest$`SKU#`[row] <- j\n    row <- row+1\n  }\n}\n\n## Adding more variables\n# Sales variable (number of sold in paticular week)\nrow <- 1\nfor (i in hh) {\n  for (j in sku) {\n    if (length(table(test[test$HH_id==i & test$`SKU#`==j,\"SKU#\"]))==0) {\n      hhdatatest$sales[row]<-0\n    }\n    if (length(table(test[test$HH_id==i & test$`SKU#`==j,\"SKU#\"]))!=0) {\n      hhdatatest$sales[row]<-table(test[test$HH_id==i & test$`SKU#`==j,\"SKU#\"])\n    }\n    row=row+1\n  }\n}\n\n##Check for consistency\nnrow(test)\nsum(hhdatatest$sales) #4417\n\n# Creating lag variable for Sales\nrow <- 1\nfor (i in hh-1) {\n  for (j in sku) {\n    if (length(table(test[test$HH_id==i & test$`SKU#`==j,\"SKU#\"]))==0) {\n      hhdatatest$lagsales[row]<-0\n    }\n    \n    if (length(table(test[test$HH_id==i & test$`SKU#`==j,\"SKU#\"]))!=0) {\n      hhdatatest$lagsales[row]<-table(test[test$HH_id==i & test$`SKU#`==j,\"SKU#\"])\n    }\n    row=row+1\n  }\n}\n\n# Creating variable for Avg. Price\nrow<-1\nfor (i in hh) {\n  for (i in sku) {\n    hhdatatest$ARSP[row] <- test$ARSP[test$`SKU#`==i][1]\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Price Paid (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in hh) {\n  for (j in sku) {\n    \n    if (is.na(sum(test$price_paid[test$`SKU#`==j & test$HH_id==i])/\n              length(test$price_paid[test$`SKU#`==j & test$HH_id==i]))==F) \n    {\n      hhdatatest$APP[row] <- sum(test$price_paid[test$`SKU#`==j & test$HH_id==i])/\n        length(test$price_paid[test$`SKU#`==j & test$HH_id==i])\n      \n    }\n    if (is.na(sum(test$price_paid[test$`SKU#`==j & test$HH_id==i])/\n              length(test$price_paid[test$`SKU#`==j & test$HH_id==i]))==T) {\n      hhdatatest$APP[row] <- 0\n    }\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Regular Price (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in hh) {\n  for (j in sku) {\n    \n    if (is.na(sum(test$regular_price[test$`SKU#`==j & test$HH_id==i])/\n              length(test$regular_price[test$`SKU#`==j & test$HH_id==i]))==F) \n    {\n      hhdatatest$ARP[row] <- sum(test$regular_price[test$`SKU#`==j & test$HH_id==i])/\n        length(test$regular_price[test$`SKU#`==j & test$HH_id==i])\n      \n    }\n    if (is.na(sum(test$regular_price[test$`SKU#`==j & test$HH_id==i])/\n              length(test$regular_price[test$`SKU#`==j & test$HH_id==i]))==T) {\n      hhdatatest$ARP[row] <- 0\n    }\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Price Cut (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in hh) {\n  for (j in sku) {\n    \n    if (is.na(sum(test$price_cut[test$`SKU#`==j & test$HH_id==i])/\n              length(test$price_cut[test$`SKU#`==j & test$HH_id==i]))==F) \n    {\n      hhdatatest$APC[row] <- sum(test$price_cut[test$`SKU#`==j & test$HH_id==i])/\n        length(test$price_cut[test$`SKU#`==j & test$HH_id==i])\n      \n    }\n    if (is.na(sum(test$price_cut[test$`SKU#`==j & test$HH_id==i])/\n              length(test$price_cut[test$`SKU#`==j & test$HH_id==i]))==T) {\n      hhdatatest$APC[row] <- 0\n    }\n    row<-row+1\n  }}\n\nhhdatatestv1 <- hhdatatest\n\n# Adding brand, form, formula, size, display, feature\nrow <- 1\nfor (i in hh) {\n  for (j in sku) {\n    hhdatatestv1$brand[hhdatatestv1$`SKU#`==j] <- as.character(test$brand[test$`SKU#`==j & !duplicated(test$`SKU#`)])\n    hhdatatestv1$form[hhdatatestv1$`SKU#`==j] <- as.character(test$form[test$`SKU#`==j & !duplicated(test$`SKU#`)])\n    hhdatatestv1$formula[hhdatatestv1$`SKU#`==j] <- as.character(test$formula2[test$`SKU#`==j & !duplicated(test$`SKU#`)])\n    hhdatatestv1$size[hhdatatestv1$`SKU#`==j] <- as.character(test$size[test$`SKU#`==j & !duplicated(test$`SKU#`)])\n    hhdatatestv1$display[hhdatatestv1$`SKU#`==j] <- as.character(test$display[test$`SKU#`==j & !duplicated(test$`SKU#`)])\n    hhdatatestv1$feature[hhdatatestv1$`SKU#`==j] <- as.character(test$feature[test$`SKU#`==j & !duplicated(test$`SKU#`)])\n    row=row+1\n  }\n}\n\n# Removing SKU 16 from dataset as test set doesnt have SKU #16\nhhdatatestv2 <- hhdatatestv1[hhdatatestv1$`SKU#`!=16,]\n\n\n\n# Full Dataset\nsku <- sort(unique(finaldatav3$`SKU#`))\nhh <- as.integer(sort(unique(finaldatav3$HH_id)))\nhhdata <- data.frame(HH_id=1:35046,`SKU#`=1:35046)\nrow <- 1\nfor (i in hh) {\n  for (j in sku) {\n    hhdata$HH_id[row] <- i\n    hhdata$`SKU#`[row] <- j\n    row <- row+1\n  }\n}\n\n## Adding more variables\n# Sales variable (number of sold in paticular week)\nrow <- 1\nfor (i in hh) {\n  for (j in sku) {\n    if (length(table(finaldatav3[finaldatav3$HH_id==i & finaldatav3$`SKU#`==j,\"SKU#\"]))==0) {\n      hhdata$sales[row]<-0\n    }\n    if (length(table(finaldatav3[finaldatav3$HH_id==i & finaldatav3$`SKU#`==j,\"SKU#\"]))!=0) {\n      hhdata$sales[row]<-table(finaldatav3[finaldatav3$HH_id==i & finaldatav3$`SKU#`==j,\"SKU#\"])\n    }\n    row=row+1\n  }\n}\n\n##Check for consistency\nsum(hhdata$sales) #6554\n\n# Creating lag variable for Sales\nrow <- 1\nfor (i in hh-1) {\n  for (j in sku) {\n    if (length(table(finaldatav3[finaldatav3$HH_id==i & finaldatav3$`SKU#`==j,\"SKU#\"]))==0) {\n      hhdata$lagsales[row]<-0\n    }\n    \n    if (length(table(finaldatav3[finaldatav3$HH_id==i & finaldatav3$`SKU#`==j,\"SKU#\"]))!=0) {\n      hhdata$lagsales[row]<-table(finaldatav3[finaldatav3$HH_id==i & finaldatav3$`SKU#`==j,\"SKU#\"])\n    }\n    row=row+1\n  }\n}\n\n# Creating variable for Avg. Price\nrow<-1\nfor (i in hh) {\n  for (i in sku) {\n    hhdata$ARSP[row] <- finaldatav3$ARSP[finaldatav3$`SKU#`==i][1]\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Price Paid (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in hh) {\n  for (j in sku) {\n    \n    if (is.na(sum(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])/\n              length(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i]))==F) \n    {\n      hhdata$APP[row] <- sum(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])/\n        length(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])\n      \n    }\n    if (is.na(sum(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])/\n              length(finaldatav3$price_paid[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i]))==T) {\n      hhdata$APP[row] <- 0\n    }\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Regular Price (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in hh) {\n  for (j in sku) {\n    \n    if (is.na(sum(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])/\n              length(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i]))==F) \n    {\n      hhdata$ARP[row] <- sum(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])/\n        length(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])\n      \n    }\n    if (is.na(sum(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])/\n              length(finaldatav3$regular_price[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i]))==T) {\n      hhdata$ARP[row] <- 0\n    }\n    row<-row+1\n  }}\n\n# Creating variable for Avg. Price Cut (average of price paid in that week; if NA then ARSP)\nrow<-1\nfor (i in hh) {\n  for (j in sku) {\n    \n    if (is.na(sum(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])/\n              length(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i]))==F) \n    {\n      hhdata$APC[row] <- sum(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])/\n        length(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])\n      \n    }\n    if (is.na(sum(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i])/\n              length(finaldatav3$price_cut[finaldatav3$`SKU#`==j & finaldatav3$HH_id==i]))==T) {\n      hhdata$APC[row] <- 0\n    }\n    row<-row+1\n  }}\n\nhhdatav1 <- hhdata\n\n# Adding brand, form, formula, size, display, feature\nrow <- 1\nfor (i in hh) {\n  for (j in sku) {\n    hhdatav1$brand[hhdatav1$`SKU#`==j] <- as.character(finaldatav3$brand[finaldatav3$`SKU#`==j & !duplicated(finaldatav3$`SKU#`)])\n    hhdatav1$form[hhdatav1$`SKU#`==j] <- as.character(finaldatav3$form[finaldatav3$`SKU#`==j & !duplicated(finaldatav3$`SKU#`)])\n    hhdatav1$formula[hhdatav1$`SKU#`==j] <- as.character(finaldatav3$formula2[finaldatav3$`SKU#`==j & !duplicated(finaldatav3$`SKU#`)])\n    hhdatav1$size[hhdatav1$`SKU#`==j] <- as.character(finaldatav3$size[finaldatav3$`SKU#`==j & !duplicated(finaldatav3$`SKU#`)])\n    hhdatav1$display[hhdatav1$`SKU#`==j] <- as.character(finaldatav3$display[finaldatav3$`SKU#`==j & !duplicated(finaldatav3$`SKU#`)])\n    hhdatav1$feature[hhdatav1$`SKU#`==j] <- as.character(finaldatav3$feature[finaldatav3$`SKU#`==j & !duplicated(finaldatav3$`SKU#`)])\n    row=row+1\n  }\n}\n\n## Making Train and Test datasets\nweeklytrain <- weeklydatav2[1:3068,]\nweeklytest  <- weeklydatav2[3069:4602,]\n\n\n\n###########################\n# Exploratory Data Analysis \n## with Fianl Dataset\npar(mfrow=c(3,2))\nhist(finaldatav3$ARSP, xlab = \"ARSP\", main= \"Distribution of ARSP\")\nhist(finaldatav3$price_paid, xlab = \"Price Paid\", main= \"Distribution of Price Paid\")\nhist(finaldatav3$price_cut, xlab = \"Price Cut\", main= \"Distribution of Price Cut\")\nhist(finaldatav3$`SKU#`, breaks=59,xlab = \"SKU number\", main= \"Distribution of ammount bought of each SKU\")\nhist(finaldatav3$HH_id,breaks = 622, xlab = \"Household ID number\", main= \"Distribution of total purchases by each Household\" )\npar(mfrow=c(1,1))\n\npar(mfrow=c(2,2))\nbarplot(prop.table(table(finaldatav3$brand)), main=\"Distribution of total purchases by Fabric Softener Brands\")\nbarplot(prop.table(table(finaldatav3$form)), main=\"Distribution of total purchases by Fabric Softener Froms\")\nbarplot(prop.table(table(finaldatav3$formula2)), main=\"Distribution of total purchases by Fabric Softener Fromulas\")\nbarplot(prop.table(table(finaldatav3$size)), main=\"Distribution of total purchases by Fabric Softener Size\")\npar(mfrow=c(1,1))\n\npar(mfrow=c(1,2))\nbarplot(prop.table(table(finaldatav3$display)), main = \"Distribution of SKUs Display categories\")\nbarplot(prop.table(table(finaldatav3$feature)), main = \"Distribution of SKUs Feature categories\")\npar(mfrow=c(1,1))\n\npar(mfrow=c(2,2))\nbarplot(prop.table(table(finaldatav3$ARSP)),ylim=c(0,0.2), main = \"Distribution of ARSP\")\nbarplot(prop.table(table(finaldatav3$price_paid)),ylim=c(0,0.2), main = \"Distribution of Price Paid\")\nbarplot(prop.table(table(finaldatav3$regular_price)),ylim=c(0,0.2), main = \"Distribution of Regular Price\")\nbarplot(prop.table(table(finaldatav3$price_cut)),ylim=c(0,0.2), main = \"Distribution of Price Cut\")\n\nsummary(finaldatav3)\nplot(finaldatav3[,c(1:20)])\nplot(finaldatav3[,c(21:40)])\n\n\n#####################################\n## Temporal Variations in SKU choices\n\n# Size of SKU's bought in IRI Weeks  \npar(mfrow=c(2,2))\nbarplot(prop.table(table(finaldatav2$IRIweek[finaldatav2$sizeSM==1 & finaldatav2$Season==\"summer\"])),ylim=c(0,0.1), main = \"Small\")\nbarplot(prop.table(table(finaldatav2$IRIweek[finaldatav2$sizeMD==1 & finaldatav2$Season==\"summer\"])),ylim=c(0,0.1), main = \"Medium\")\nbarplot(prop.table(table(finaldatav2$IRIweek[finaldatav2$sizeLR==1 & finaldatav2$Season==\"summer\"])),ylim=c(0,0.1), main = \"Large\")\nbarplot(prop.table(table(finaldatav2$IRIweek[finaldatav2$sizeXL==1 & finaldatav2$Season==\"summer\"])),ylim=c(0,0.1), main = \"X-Large\")\npar(mfrow=c(1,1))\n    # No clear pattern\n\ntable(finaldatav2$Season,finaldata$form)\ntable(finaldatav2$Season,as.factor(finaldata$`SKU#`))\ntable(finaldatav2$Season,finaldatav2$d_feat)\ntable(finaldatav2$Season,finaldatav2$d_disp)\n\n# Sale of Brands by Season\ntable(finaldatav2$Season,finaldata$brand)\npar(mfrow=c(2,2))\nbarplot(prop.table(table(finaldata$brand[finaldatav2$Season==\"winter\"])), main=\"Winter\", xlab = \"Brand\", col = \"Light Blue\")\nbarplot(prop.table(table(finaldata$brand[finaldatav2$Season==\"spring\"])), main=\"Spring\", xlab = \"Brand\", col = \"light green\")\nbarplot(prop.table(table(finaldata$brand[finaldatav2$Season==\"summer\"])), main=\"Summer\", xlab = \"Brand\", col = \"orange\")\nbarplot(prop.table(table(finaldata$brand[finaldatav2$Season==\"autumn\"])), main=\"Autumn\", xlab = \"Brand\", col = \"brown\")\npar(mfrow=c(1,1)) \n    #Clear distinction of choice of brand in different seasons\n    # There could be someting in a particular brand that causes it to be prefered in a season\n\n# Sale of Brands by Month\ntable(finaldatav2$Season,finaldata$brand)\npar(mfrow=c(3,4))\nfor (i in 1:12) {\n  barplot(prop.table(table(finaldata$brand[finaldatav2$Month==i])), main=i, xlab = \"Brand\", col = i)\n}\npar(mfrow=c(1,1))\n    # Some brands are preferred in colder months than in warmer months\n\n# Sale of Size by Season\ntable(finaldatav3$Season,finaldatav3$size)\npar(mfrow=c(2,2))\nbarplot(prop.table(table(finaldata$size[finaldatav2$Season==\"winter\"])), main=\"Sale of Sizes in Winter\", xlab = \"Size\", col = \"Light Blue\", ylim = c(0,0.8))\nbarplot(prop.table(table(finaldata$size[finaldatav2$Season==\"spring\"])), main=\"Sale of Sizes in Spring\", xlab = \"Size\", col = \"light green\", ylim = c(0,0.8))\nbarplot(prop.table(table(finaldata$size[finaldatav2$Season==\"summer\"])), main=\"Sale of Sizes in Summer\", xlab = \"Size\", col = \"orange\", ylim = c(0,0.8))\nbarplot(prop.table(table(finaldata$size[finaldatav2$Season==\"autumn\"])), main=\"Sale of Sizes in Autumn\", xlab = \"Size\", col = \"brown\", ylim = c(0,0.8))\npar(mfrow=c(1,1)) \n    # Medium is the most widely sold size across seasons\n    # XL is mostly sold in Autumn\n    # Summer and Spring see high sales of small\n\n# Price cut by Season\npar(mfrow=c(2,2))\nhist(finaldatav3$price_cut[finaldatav3$Season==\"winter\" & finaldatav3$price_cut != 0], ylim = c(0,500), main=\"Price Cuts in Winter\", xlab = \"Price Cut\", col = \"Light Blue\")\nhist(finaldatav3$price_cut[finaldatav3$Season==\"spring\" & finaldatav3$price_cut != 0], ylim = c(0,500), main=\"Price Cuts in Spring\", xlab = \"Price Cut\", col = \"light green\")\nhist(finaldatav3$price_cut[finaldatav3$Season==\"summer\" & finaldatav3$price_cut != 0], ylim = c(0,500),main=\"Price Cuts in Summer\", xlab = \"Price Cut\", col = \"orange\")\nhist(finaldatav3$price_cut[finaldatav3$Season==\"autumn\" & finaldatav3$price_cut != 0], ylim = c(0,500), main=\"Price Cuts in Autumn\", xlab = \"Price Cut\", col = \"brown\")\npar(mfrow=c(1,1))\n    # The higher price cuts took place in the Autumn \n    # The most mid level price cuts took place in Spring\n    # The most low level price custs took place in Winter\n    # Summer had the least price cuts\n\n# Sale of SKU by Season\ntable(finaldatav3$Season,finaldatav3$`SKU#`)\npar(mfrow=c(2,2))\nbarplot(prop.table(table(finaldatav3$`SKU#`[finaldatav3$Season==\"winter\"])), main=\"Sale of SKU# in Winter\", xlab = \"SKU Number\", col = \"Light Blue\", ylim = c(0,0.1))\nbarplot(prop.table(table(finaldatav3$`SKU#`[finaldatav3$Season==\"spring\"])), main=\"Sale of SKU# in WinterSpring\", xlab = \"SKU Number\", col = \"light green\", ylim = c(0,0.1))\nbarplot(prop.table(table(finaldatav3$`SKU#`[finaldatav3$Season==\"summer\"])), main=\"Sale of SKU# in WinterSummer\", xlab = \"SKU Number\", col = \"orange\", ylim = c(0,0.1))\nbarplot(prop.table(table(finaldatav3$`SKU#`[finaldatav3$Season==\"autumn\"])), main=\"Sale of SKU# in WinterAutumn\", xlab = \"SKU Number\", col = \"brown\", ylim = c(0,0.1))\npar(mfrow=c(1,1))\n    # Some SKU choices are more popular in some seasons than others\n\n\n\n# Monthly/Seasonal Sales of SKU's\npar(mfrow=c(1,2))\nbarplot(prop.table(table(finaldatav3$Month)), main=\"Monthly Sales of SKU's\")\n    # First Half of the year the sales are high as compared to rest of the year\nbarplot(prop.table(table(finaldatav3$Season)), main=\"Seasonal Sales of SKU's\")\n    # Spring sees the highest sales followed by winter\n    # Highest price cuts in autum maybe because it sees the lowest sales\npar(mfrow=c(1,1))\n\n\n\n######################################\n## Household Variations in SKU choices\n\npar(mfrow=c(2,2))\nhist(finaldatav2$HH_id[finaldatav2$Season==\"winter\"], ylim = c(0,300), main=\"# of Fab. Sof. bought by each HH in Winter\", xlab = \"House ID\", col = \"Light Blue\")\nhist(finaldatav2$HH_id[finaldatav2$Season==\"spring\"], ylim = c(0,300), main=\"# of Fab. Sof. bought by each HH in Spring\", xlab = \"House ID\", col = \"light green\")\nhist(finaldatav2$HH_id[finaldatav2$Season==\"summer\"], ylim = c(0,300), main=\"# of Fab. Sof. bought by each HH in Summer\", xlab = \"House ID\", col = \"orange\")\nhist(finaldatav2$HH_id[finaldatav2$Season==\"autumn\"], ylim = c(0,300), main=\"# of Fab. Sof. bought by each HH in Autumn\", xlab = \"House ID\", col = \"brown\")\npar(mfrow=c(1,1)) \n    #Sales of fabric softner go up in winter and spring months. Highest in Spring\n\n# ARSP per SKU by SIZE\npar(mfrow=c(2,2))\nplot(finaldatav3$`SKU#`[finaldatav3$size==\"SM\"],finaldatav3$ARSP[finaldatav3$size==\"SM\"], col = 1, pch =19, ylim=c(0,7), xlab=\"SKU #\",ylab=\"\" ,main=\"ARSP of SM sized SKUs\")\nplot(finaldatav3$`SKU#`[finaldatav3$size==\"MD\"],finaldatav3$ARSP[finaldatav3$size==\"MD\"], col = 2, pch =19, ylim=c(0,7), xlab=\"SKU #\",ylab=\"\" , main=\"ARSP of MD sized SKUs\")\nplot(finaldatav3$`SKU#`[finaldatav3$size==\"LR\"],finaldatav3$ARSP[finaldatav3$size==\"LR\"], col = 3, pch =19, ylim=c(0,7), xlab=\"SKU #\",ylab=\"\" , main=\"ARSP of LR sized SKUs\")\nplot(finaldatav3$`SKU#`[finaldatav3$size==\"XL\"],finaldatav3$ARSP[finaldatav3$size==\"XL\"], col = 4, pch =19, ylim=c(0,7), xlab=\"SKU #\",ylab=\"\" , main=\"ARSP of XL sized SKUs\")\npar(mfrow=c(1,1)) \n#Small size SKU's have a lower price and lease variation.\n# XL has the most ammount of variation in price\n\n#SAle of differrent sized sku's by hh's\npar(mfrow=c(2,2))\nhist(finaldatav3$HH_id[finaldatav3$size==\"SM\"],col = 1, pch =19,ylim=c(0,300),  xlab=\"SKU #\",ylab=\"\" ,main=\"ARSP of SM sized SKUs\")\nhist(finaldatav3$HH_id[finaldatav3$size==\"MD\"],col = 2, pch =19,ylim=c(0,300),  xlab=\"SKU #\",ylab=\"\" , main=\"ARSP of MD sized SKUs\")\nhist(finaldatav3$HH_id[finaldatav3$size==\"LR\"],col = 3, pch =19, ylim=c(0,300),xlab=\"SKU #\",ylab=\"\" , main=\"ARSP of LR sized SKUs\")\nhist(finaldatav3$HH_id[finaldatav3$size==\"XL\"],col = 4, pch =19,ylim=c(0,300), xlab=\"SKU #\",ylab=\"\" , main=\"ARSP of XL sized SKUs\")\npar(mfrow=c(1,1)) \n\n\n# Total number of sales in each week (Sales)\n\n# Total ammount ($) of sales in each week (sales * ARSP)\n\n# Total price cut ($) in each week (Sales * APC)\n\n# Total average price paid in each week (sum of APP)\n\n\n\n###############################################\n## Analysis of Variables (Pricing & Promotions)\n\n# Relationship between Price_cut and average regular selling price\ncor(finaldatav3$price_cut,finaldatav3$ARSP) # +0.5 correlation\n    #The price cuts increase as ARSP increases and reach the peak when ARSP is little more than $4. \n    # After that the price cuts sharply decline. This may be due to lower price cuts on higher priced\n    # fabric softners which are also dont have high sales.\nplot(finaldatav3$ARSP,finaldatav3$price_cut, col=finaldatav3$brand,xlab = \"ARSP\", ylab = \"Price Cut\", main = \"Price cuts by ARSP of SKUs\") \nlegend('topright', c(\"ARM\", \"BNC\", \"CLF\", \"DWN\", \"FNT\", \"GEN\", \"PRL\", \"SNG\", \"STP\", \"TSN\"),col=(1:10), bty='n',pch = 19, cex=0.8)\n    #The price cuts increase as ARSP increases and reach the peak when ARSP is little more than $4. \n    # After that the price cuts sharply decline. This may be due to lower price cuts on higher priced\n    # fabric softners which are also dont have high sales.\n    # Some brands have higher price cuts than others\n\npar(mfrow=c(1,2))\nplot(finaldatav3$ARSP,finaldatav3$price_cut, col=finaldatav3$feature,xlab = \"ARSP\", ylab = \"Price Cut\", main = \"Price cuts of SKUs with a Feature\")\n    # Fabric softners which have the presence of a feature are genrally higher priced\nplot(finaldatav3$ARSP,finaldatav3$price_cut, col=finaldatav3$display,xlab = \"ARSP\", ylab = \"Price Cut\", main = \"Price cuts of SKUs with Display setting\")\n    # Fabric softners which have the presence of a display variable are genrally medium priced\n    # this may be due to advertising costs and display costs. Lower priced softners cannot \n    # have these features and display settings and still keep their low price\n    # The presence of display variable also have higher price cuts. This makes sence since the items\n    # which have a price cut are also displayed in a better way than other softners to increase sales\npar(mfrow=c(1,1))\n    # this plot reveals even more insight. The better the display (assumption is better the display, \n\npar(mfrow=c(2,2))\n# Price cut and SKU in different sizes(Do some SKU's have more price cuts than others?)\nplot(finaldatav3$`SKU#`,finaldatav3$price_cut, col=finaldatav3$size, \n     ylab = \"Price Cut ($)\", xlab = \"SKU Number\", pch=19, \n     main = \"SKU and Price Cuts\")\nlegend('topright', c(\"LR\",\"MD\",\"SM\",\"XL\"),pch = 19,col=c(1,2,3,4), cex=.75,bty='n')\n    # XL (blue) has the highest price cuts\n# Price cut and SKU in different Forms\nplot(finaldatav3$`SKU#`,finaldatav3$price_cut, col=finaldatav3$form, \nylab = \"Price Cut ($)\", xlab = \"SKU Number\", pch=19, \nmain = \"SKU and Price Cuts\")\nlegend('topright', c(\"Concentrated\",\"Refill\",\"Liquid\",\"Sheets\"),col=c(1,2,3,4),  cex=.75,bty='n',pch = 19)\n    # The SKU's which come in liquid form have the highest price cuts\npar(mfrow=c(1,1))\n# Price Cuts and SKU's with different brands\nplot(finaldatav3$`SKU#`,finaldatav3$price_cut, col=finaldatav3$brand, \n     ylab = \"Price Cut ($)\", xlab = \"SKU Number\", pch=19, \n     main = \"SKU and Price Cuts\")\nlegend('topright', c(\"ARM\", \"BNC\", \"CLF\", \"DWN\", \"FNT\", \"GEN\", \"PRL\", \"SNG\", \"STP\", \"TSN\"),col=(1:10), bty='n',pch = 19, cex=0.8)\n    # Private Label has the highest as well as the lowest promotions.\n    # The lower promoted SKU's in that brand may be funding the higher promoted SKU's\npar(mfrow=c(1,1))\n\n#################################\n## Attribute analysis of Each SKU\n# Tree can be drawn showing the formulation of skus by different brands, sizes, froms and formulas\nlibrary(rpart)\t\t\t\t        # Popular decision tree algorithm\nlibrary(rattle)\t\t\t\t\t# Fancy tree plot\nlibrary(rpart.plot)\t\t\t\t# Enhanced tree plots\nlibrary(RColorBrewer)\t\t\t\t# Color selection for fancy tree plot\nlibrary(party)\t\t\t\t\t# Alternative decision tree algorithm\nlibrary(partykit)\t\t\t\t# Convert rpart object to BinaryTree\nlibrary(caret)\nskutree <- rpart(as.factor(`SKU#`) ~ brandARM + brandBNC + brandCLF + brandDWN + brandFNT + brandGEN + brandPRL + \n                  brandSNG + brandSTP + brandTSN+ formB+formF+formL+formS+formula2LT+formula2RG+formula2ST+\n                  formula2UN+sizeLR+sizeMD+sizeSM+sizeXL,data=finaldatav3, method= \"class\")\nplot(tree1, uniform=TRUE, main=\"Classification Tree for Brand\")\ntext(tree1, use.n=TRUE, all=TRUE, cex=.8)\nsummary(skutree)\nprp(skutree,cex = .9)\t\t\t\t\t# Will plot the tree\nprp(skutree,varlen=3,cex = .9) #shorten variable names\nfancyRpartPlot(skutree) \n\n      # Quite accurate but SKU# has 59 levels and the alsorithm can handle only 32 levels\n     # Work around could be to divide the skus into 2 equal groups\n     # 1 to 63 and 65 to 131\nskutree1 <- rpart(as.factor(`SKU#`) ~ brandARM + brandBNC + brandCLF + brandDWN + brandFNT + brandGEN + brandPRL + \n                   brandSNG + brandSTP + brandTSN+ formB+formF+formL+formS+formula2LT+formula2RG+formula2ST+\n                   formula2UN+sizeLR+sizeMD+sizeSM+sizeXL,data=finaldatav3[finaldatav3$`SKU#` > 1 & finaldatav3$`SKU#` < 64,], method= \"class\")\nprp(skutree1,cex = .9,extra = 2, under = T, branch = .5,xflip = F, box.col = \"grey\")\nsummary(skutree1)\n\nskutree2 <- rpart(as.factor(`SKU#`) ~ brandARM + brandBNC + brandCLF + brandDWN + brandFNT + brandGEN + brandPRL + \n                   brandSNG + brandSTP + brandTSN+ formB+formF+formL+formS+formula2LT+formula2RG+formula2ST+\n                   formula2UN+sizeLR+sizeMD+sizeSM+sizeXL,data=finaldatav3[finaldatav3$`SKU#` > 64 & finaldatav3$`SKU#` < 131,], method= \"class\")\nprp(skutree2,cex = .9,extra = 2, under = T, branch = .5,xflip = T, box.col = \"grey\")\nsummary(skutree2)\n\nskutree.varimp1 <- rpart(as.factor(`SKU#`) ~ brand+ form +formula2 +size,\n                        data=finaldatav3[finaldatav3$`SKU#` > 1 & finaldatav3$`SKU#` < 64,], method= \"class\")\nprp(skutree.varimp1,cex = .9,extra = 2, under = T, branch = .5,xflip = F, box.col = \"grey\")\nsummary(skutree.varimp1)\n# Variable importance\n# size formula2    brand     form \n# 32       31       22       15 \n\nskutree.varimp2 <- rpart(as.factor(`SKU#`) ~ brand+ form +formula2 +size,\n                         data=finaldatav3[finaldatav3$`SKU#` > 64 & finaldatav3$`SKU#` < 131,], method= \"class\")\nprp(skutree.varimp2,cex = .9,extra = 2, under = T, branch = .5,xflip = T, box.col = \"grey\")\nsummary(skutree.varimp2)\n# Variable importance\n# form     size    brand formula2 \n# 34       31       23       12 \n# A few SKU's have the exact same characteristics as others\n\n\n# Using Caret Package to get variable importance\n\n\n\n\n\n\n\n\n####################\n## Predictive Models\n## Weekly Dataset\n\n# Decision Tree\nlibrary(\"rpart\")\nweek.tree1 <- rpart( as.numeric(sales) ~ as.factor(month) + as.factor(season) + as.factor(brand) +\n                  as.factor(form) + as.factor(formula) + as.factor(size) +\n                  as.factor(display)  + as.factor(feature) + as.numeric(APP) + \n                  as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(IRIweek) +\n                  as.numeric(lagsales)+ as.factor(SKU.), data = weeklytrain)\nsummary(week.tree1$splits)\n# Variable importance\n# as.numeric(APC)      as.factor(SKU.)      as.numeric(ARP)      as.factor(form)      as.numeric(APP) \n# 22                   19                   14                   10                    8 \n# as.numeric(lagsales)      as.factor(size)     as.factor(brand)     as.numeric(ARSP)     as.factor(month) \n# 8                    6                    5                    3                    2 \n# In sample predictive check\nweeklytrain[,17] <- predict(week.tree1,weeklytrain)\nin.weektree1 <- data.frame(Actual=weeklytrain[,3],Predictedin=weeklytrain[,17])\ninstall.packages(\"hydroGOF\")\nlibrary(hydroGOF)\nrmse(in.weektree1$Predictedin,in.weektree1$Actual)\n# In sample predictive check\nweeklytest[,17] <- predict(week.tree1,weeklytest)\nout.weektree1 <- data.frame(Actual=weeklytest[,3],Predictedout=weeklytest[,17])\nrmse(out.weektree1$Predictedout,out.weektree1$Actual)\n\n\n\n# Linear Regression\nweek.lm1 <- lm(as.numeric(sales) ~ as.factor(month) + as.factor(season) + as.factor(brand) +\n                 as.factor(form) + as.factor(formula) + as.factor(size) +\n                 as.factor(display)  + as.factor(feature) + as.numeric(APP) + \n                 as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(IRIweek) +\n                 as.numeric(lagsales)+ as.factor(SKU.) , data = weeklytrain)\nsummary(week.lm1)\nAIC(week.lm1)\nBIC(week.lm1)\n# In sample predictive check\nweeklytrain[,17] <- predict(week.lm1,weeklytrain)\nin.weeklm1 <- data.frame(Actual=weeklytrain[,3],Predictedin=weeklytrain[,17])\nrmse(in.weeklm1$Predictedin,in.weeklm1$Actual)\n# Out of sample predictive check\nweeklytest[,17] <- predict(week.lm1,weeklytest)\nout.weeklm1 <- data.frame(Actual=weeklytest[,3],Predictedout=weeklytest[,17])\nrmse(out.weeklm1$Predictedout,out.weeklm1$Actual)\nabline(week.lm1)\n\n\n# Random Forest\nlibrary(randomForest)\nweek.rtree1 <- randomForest(as.numeric(sales) ~ month+season+brand+\n                       form + formula +size+\n                       display+ feature + APP + \n                       ARP +ARSP +APC + IRIweek +\n                       lagsales+ SKU., data = weeklytrain)\nsummary(week.rtree1)\nimportance(week.rtree1)\nsort(week.rtree1$importance)\nweeklytrain[,17] <- predict(week.rtree1,weeklytrain)\nin.weekrtree1 <- data.frame(Actual=weeklytrain[,3],Predictedin=weeklytrain[,17])\nrmse(in.weekrtree1$Predictedin,in.weekrtree1$Actual)\n# In sample predictive check\nweeklytest[,17] <- predict(week.rtree1,weeklytest)\nout.weekrtree1 <- data.frame(Actual=weeklytest[,3],Predictedout=weeklytest[,17])\nrmse(out.weekrtree1$Predictedout,out.weekrtree1$Actual)\ninstall.packages(\"graphics\")\nrequire(stats)\npoints(out.weektree1$Actual,out.weektree1$Predictedout)\n\n\n#SVM\nlibrary(e1071)\nweek.svr1 <- svm(as.numeric(sales) ~ month+season+brand+\n                   form + formula +size+\n                   display+ feature + APP + \n                   ARP +ARSP +APC + IRIweek +\n                   lagsales+ SKU., data = weeklytrain)\nsummary(week.svr1)\n# In sample predictive check\nweeklytrain[,17] <- predict(week.svr1,weeklytrain)\nin.weeksvr1 <- data.frame(Actual=weeklytrain[,3],Predictedin=weeklytrain[,17])\nrmse(in.weeksvr1$Predictedin,in.weeksvr1$Actual)\n# Out of sample predictive check\nweeklytest[,17] <- predict(week.svr1,weeklytest)\nout.weeksvr1 <- data.frame(Actual=weeklytest[,3],Predictedout=weeklytest[,17])\nrmse(out.weeksvr1$Predictedout,out.weeksvr1$Actual)\n\npoints(out.weeksvr1$Predictedout,out.weeksvr1$Actual, col = \"red\", pch=4)\n\n\n####################\n## Predictive Models\n## HouseHold Dataset\n\n# Decision Tree\nlibrary(\"rpart\")\nhh.tree1 <- rpart( as.numeric(sales) ~  as.factor(brand) +\n                       as.factor(form) + as.factor(formula) + as.factor(size) +\n                       as.factor(feature) + as.numeric(APP) + \n                       as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(HH_id) +\n                       as.numeric(lagsales)+ as.factor(`SKU#`), data = hhdatatrainv2)\nsummary(hh.tree1)\nprintcp(hh.tree1)\n# Variable importance\n# as.numeric(APC)      as.factor(SKU.)      as.numeric(ARP)      as.factor(form)      as.numeric(APP) \n# 22                   19                   14                   10                    8 \n# as.numeric(lagsales)      as.factor(size)     as.factor(brand)     as.numeric(ARSP)     as.factor(month) \n# 8                    6                    5                    3                    2 \n# In sample predictive check\nlibrary(hydroGOF)\nhhdatatrainv2[,16] <- predict(hh.tree1,hhdatatrainv2)\nin.hhtree1 <- data.frame(Actual=hhdatatrainv2[,4],Predictedin=hhdatatrainv2[,16])\nrmse(in.hhtree1$Predictedin,in.hhtree1$Actual)\n# In sample predictive check\nhhdatatestv2[,16] <- predict(hh.tree1,hhdatatestv2)\nout.hhtree1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])\nrmse(out.hhtree1$Predictedout,out.hhtree1$Actual)\n\n\n\n# Linear Regression\nhh.lm1 <- lm(as.numeric(sales) ~  as.factor(brand) +\n                 as.factor(form) + as.factor(formula) + as.factor(size) +\n                 as.factor(feature) + as.numeric(APP) + \n                 as.numeric(ARP) +as.numeric(ARSP) +as.numeric(APC) + as.numeric(HH_id) +\n                 as.numeric(lagsales)+ as.factor(`SKU#`), data = hhdatatrainv2)\nsummary(hh.lm1)\nAIC(hh.lm1)\nBIC(hh.lm1)\n# In sample predictive check\nhhdatatrainv2[,16] <- predict(hh.lm1,hhdatatrainv2)\nin.hhlm1 <- data.frame(Actual=hhdatatrainv2[,4],Predictedin=hhdatatrainv2[,16])\nrmse(in.hhlm1$Predictedin,in.hhlm1$Actual)\n# Out of sample predictive check\nhhdatatestv2[,16] <- predict(hh.lm1,hhdatatestv2)\nout.hhlm1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])\nrmse(out.hhlm1$Predictedout,out.hhlm1$Actual)\n\n\n\n# Random Forest\nlibrary(randomForest)\nhh.rtree1 <- randomForest(sales~brand+form + formula +size+feature + APP + ARP +ARSP +APC + HH_id +lagsales, data = hhdatatrainv2)\nsummary(hh.rtree1)\nhh.rtree1\n# In sample predictive check\nhhdatatrainv2[,16] <- predict(hh.rtree1,hhdatatrainv2)\nin.hhrtree1 <- data.frame(Actual=hhdatatrainv2[,4],Predictedin=hhdatatrainv2[,16])\nrmse(in.hhrtree1$Predictedin,in.hhrtree1$Actual)\n# Out of sample predictive check\nhhdatatestv2[,16] <- predict(hh.rtree1,hhdatatestv2)\nout.hhrtree1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])\nrmse(out.hhrtree1$Predictedout,out.hhrtree1$Actual)\n\n\n#SVM\nlibrary(e1071)\nhh.svr1 <- svm(as.numeric(sales) ~ brand+\n                   form + formula +size+\n                   feature + APP + \n                   ARP +ARSP +APC + HH_id +\n                   lagsales+ `SKU#`, data = hhdatatrainv2)\nsummary(hh.svr1)\n# In sample predictive check\nhhdatatrainv2[,16] <- predict(hh.svr1,hhdatatrainv2)\nin.hhsvr1 <- data.frame(Actual=hhdatatrainv2[,4],Predictedin=hhdatatrainv2[,16])\nrmse(in.hhsvr1$Predictedin,in.hhsvr1$Actual)\n# Out of sample predictive check\nhhdatatestv2[,16] <- predict(hh.svr1,hhdatatestv2)\nout.hhsvr1 <- data.frame(Actual=hhdatatestv2[,4],Predictedout=hhdatatestv2[,16])\nrmse(out.hhsvr1$Predictedout,out.hhsvr1$Actual)\n\npoints(out.weeksvr1$Predictedout,out.weeksvr1$Actual, col = \"red\", pch=4)\n",
    "created" : 1447425425936.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "693704833",
    "id" : "3A3CB19A",
    "lastKnownWriteTime" : 1448218558,
    "path" : "~/Studies/Courses/USF/Statistical Data Mining/Final Project/fabric_softener/SDM_Final_Proj.R",
    "project_path" : "SDM_Final_Proj.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}